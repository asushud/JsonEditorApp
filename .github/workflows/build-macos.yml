name: Build macOS Native Image (.app)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2️⃣ Setup GraalVM 17 CE with native-image
      - name: Setup GraalVM 17
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm-community'
          components: 'native-image'

      # 3️⃣ Compile Java files & create fat jar
      - name: Build JAR
        run: |
          javac -cp ".:jackson-core.jar:jackson-databind.jar:jackson-annotations.jar" JsonEditor.java
          jar cfe JsonEditor-fat.jar JsonEditor *.class

      # 4️⃣ Build native image with GUI support
      - name: Build Native Image (.app)
        run: |
          mkdir -p dist/JsonEditor.app/Contents/MacOS
          native-image \
            --no-fallback \
            -H:Name=JsonEditor \
            -H:ReflectionConfigurationFiles=reflect-config.json \
            --initialize-at-run-time=javax.swing,java.awt \
            --enable-all-security-services \
            -cp "JsonEditor-fat.jar:jackson-core.jar:jackson-databind.jar:jackson-annotations.jar" \
            --module-path $JAVA_HOME/jmods \
            --add-modules java.desktop \
            JsonEditor
          mv JsonEditor dist/JsonEditor.app/Contents/MacOS/

      # 5️⃣ Create Info.plist for the .app bundle
      - name: Create Info.plist
        run: |
          mkdir -p dist/JsonEditor.app/Contents
          cat > dist/JsonEditor.app/Contents/Info.plist <<'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>CFBundleName</key><string>JsonEditor</string>
            <key>CFBundleDisplayName</key><string>JsonEditor</string>
            <key>CFBundleIdentifier</key><string>com.example.jsoneditor</string>
            <key>CFBundleVersion</key><string>1.0</string>
            <key>CFBundlePackageType</key><string>APPL</string>
            <key>CFBundleExecutable</key><string>JsonEditor</string>
          </dict>
          </plist>
          EOF

      # 6️⃣ Zip the .app for download
      - name: Zip .app for release
        run: |
          cd dist
          zip -r JsonEditor-macos.zip JsonEditor.app

      # 7️⃣ Upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: JsonEditor-macos
          path: dist/JsonEditor-macos.zip
